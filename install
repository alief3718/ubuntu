สร้างไฟล์ install ก่อน
--sudo -i
--cd /tmp
--nano install
--คัดลอกสคริปด้านล่างมาวางแล้ว SAVE
--chmod +x install
-- ./install
--------------------------------------------------------

#!/bin/bash
sudo apt-get install -y samba vsftpd
curl https://rclone.org/install.sh | sudo bash -s beta
cd /tmp
wget https://github.com/trapexit/mergerfs/releases/download/2.29.0/mergerfs_2.29.0.ubuntu-bionic_amd64.deb
dpkg -i *.deb
rm -rf *.deb

apt-get install libcurl4-openssl-dev bzip2 mono-devel -y
apt install gnupg ca-certificates
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
apt update -y
apt install mono-devel
cd /tmp
wget https://mediaarea.net/repo/deb/repo-mediaarea_1.0-12_all.deb 
dpkg -i *.deb 
apt-get update -y
rm -rf *.deb

cd /tmp
wget https://github.com/MediaBrowser/Emby.Releases/releases/download/4.5.0.10/emby-server-deb_4.5.0.10_amd64.deb
dpkg -i *.deb
rm -rf *.deb

#sudo apt install docker.io -y
#sudo systemctl enable --now docker
#docker --version
#sudo curl -L "https://github.com/docker/compose/releases/download/1.26.0-rc4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#sudo chmod +x /usr/local/bin/docker-compose

apt-get install build-essential pkg-config automake libtool git zlib1g-dev -y 
apt-get install libboost-dev libboost-system-dev libboost-chrono-dev libboost-random-dev libssl-dev libgeoip-dev -y 
apt-get install qtbase5-dev qttools5-dev-tools libqt5svg5-dev -y
cd /tmp
git clone https://github.com/arvidn/libtorrent.git
cd libtorrent
./autotool.sh
./configure --disable-debug --disable-gui --enable-encryption CXXFLAGS="-std=c++14"
make clean && make -j$(nproc)
sudo make install
mkdir -p /tmp/qBittorrent
cd /tmp/qBittorrent
curl -sSL https://github.com/qbittorrent/qBittorrent/archive/release-4.2.5.tar.gz | tar xz --strip 1
sed -i 's|"qB"|"uT"|' /tmp/qBittorrent/src/base/bittorrent/session.cpp 
sed -i 's|"qBittorrent/" QBT_VERSION_2|"uTorrent/1610"|' /tmp/qBittorrent/src/base/bittorrent/session.cpp
./configure CXXFLAGS="-std=c++14" --disable-gui
make -j$(nproc)
sudo make install
ldconfig
export LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}

sudo cp -pf /etc/samba/smb.conf /etc/samba/smb.conf.bak
rm -rf /etc/samba/smb.conf
wget -P /etc/samba/ https://raw.githubusercontent.com/alief3718/homescripts/master/etc/smb.conf
sudo cp -pf /etc/vsftpd.conf /etc/vsftpd.conf.bak
rm -rf /etc/vsftpd.conf
wget -P /etc/ https://raw.githubusercontent.com/alief3718/homescripts/master/etc/vsftpd.conf
wget -P /etc/systemd/system/ https://raw.githubusercontent.com/alief3718/homescripts/master/systemd/rclone1.service
wget -P /etc/systemd/system/ https://raw.githubusercontent.com/alief3718/homescripts/master/systemd/rclone2.service
wget -P /etc/systemd/system/ https://raw.githubusercontent.com/alief3718/homescripts/master/systemd/gmedia.service
wget -P /etc/systemd/system/ https://raw.githubusercontent.com/alief3718/homescripts/master/systemd/jackett.service
wget -P /etc/systemd/system/ https://raw.githubusercontent.com/alief3718/homescripts/master/systemd/radarr.service
wget -P /etc/systemd/system/ https://raw.githubusercontent.com/alief3718/homescripts/master/systemd/sonarr.service
wget -P /etc/systemd/system/ https://raw.githubusercontent.com/alief3718/homescripts/master/systemd/qbit.service
systemctl start rclone1
systemctl start rclone2
systemctl start gmedia
systemctl start qbit
systemctl start jackett
systemctl start sonarr
systemctl start radarr
systemctl enable rclone1
systemctl enable rclone2
systemctl enable gmedia
systemctl enable qbit
systemctl enable jackett
systemctl enable sonarr
systemctl enable radarr
systemctl restart vsftpd
systemctl restart smbd
rm -rf /tmp/*

